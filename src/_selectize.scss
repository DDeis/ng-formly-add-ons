@import '../node_modules/bootstrap/scss/variables';

.selectize {

	.selectize-control {
		position: relative;

		font-size: $font-size-base;
  	line-height: $input-line-height;


		&.plugin-drag_drop {
			&.multi > .selectize-input > div.ui-sortable-placeholder {
			  visibility: visible !important;
			  background: #f2f2f2 !important;
			  background: rgba(0, 0, 0, 0.06) !important;
			  border: 0 none !important;
			  -webkit-box-shadow: inset 0 0 12px 4px #ffffff;
			  box-shadow: inset 0 0 12px 4px #ffffff;
			}
			.ui-sortable-helper {
			  -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
			  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
			}
			.ui-sortable-placeholder::after {
			  content: '!';
			  visibility: hidden;
			}
		}

		&.plugin-optgroup_columns {
			.optgroup {
			  border-right: 1px solid #f2f2f2;
			  border-top: 0 none;
			  float: left;
			  -webkit-box-sizing: border-box;
			  -moz-box-sizing: border-box;
			  box-sizing: border-box;

				&:last-child {
				  border-right: 0 none;
				}
				&:before {
				  display: none;
				}
			}

			.optgroup-header {
			  border-top: 0 none;
			}
		}

		&.plugin-remove_button {
			[data-value] {
			  position: relative;
			  padding-right: 1.3rem !important;

				.remove {
				  z-index: 1;
				  /* fixes ie bug (see #392) */
				  position: absolute;
				  top: 0;
				  right: 0;
				  bottom: 0;
				  width: 1.05rem;
				  text-align: center;
				  font-weight: bold;
				  font-size: 0.75rem;
				  color: inherit;
				  text-decoration: none;
				  vertical-align: middle;
				  display: inline-block;
				  padding: 0px 0 0 0;
				  border-left: 1px solid rgba(0, 0, 0, 0);
				  -webkit-border-radius: 0 2px 2px 0;
				  -moz-border-radius: 0 2px 2px 0;
				  border-radius: 0 2px 2px 0;
				  -webkit-box-sizing: border-box;
				  -moz-box-sizing: border-box;
				  box-sizing: border-box;

					&:hover {
					  background: rgba(0, 0, 0, 0.05);
					}
				}

				&.active .remove {
				  border-left-color: rgba(0, 0, 0, 0);
				}
			}

			.disabled [data-value] {
				.remove {
				  border-left-color: rgba(77, 77, 77, 0);

					&:hover {
					  background: none;
					}
				}
			}

			.remove-single {
			  position: absolute;
			  right: 28px;
			  top: 6px;
			  font-size: 23px;
			}
		}


		&.multi {
			.selectize-input {

				&.has-items {
					padding: $input-padding-y $input-padding-x;
					padding-bottom: calc($input-padding-y / 2);
				}

				> div {
				  // -webkit-border-radius: 3px;
				  // -moz-border-radius: 3px;
				  // border-radius: 3px;
					cursor: pointer;
			    margin: 0 3px 3px 0;
			    padding: 1px 3px;
			    background: #efefef;
			    color: #333;
			    border: 0 solid transparent;
					font-size: 0.70rem;

					@include border-radius($input-border-radius-sm);
				}

				> div.active {
				  background: #428bca;
				  color: #ffffff;
				  border: 0 solid rgba(0, 0, 0, 0);
				}

				&.disabled > div,
				&.disabled > div.active {
				  color: #808080;
				  background: #ffffff;
				  border: 0 solid rgba(77, 77, 77, 0);
				}
			}

		}


		&.single {
			.selectize-input,
			.selectize-input input {
			  cursor: pointer;
			}
			.selectize-input.input-active,
			.selectize-input.input-active input {
			  cursor: text;
			}
			.selectize-input:after {
			  content: ' ';
			  display: block;
			  position: absolute;
			  top: 50%;
			  right: 17px;
			  margin-top: -3px;
			  width: 0;
			  height: 0;
			  border-style: solid;
			  border-width: 5px 5px 0 5px;
			  border-color: #333333 transparent transparent transparent;
			}
			.selectize-input.dropdown-active:after {
			  margin-top: -4px;
			  border-width: 0 5px 5px 5px;
			  border-color: transparent transparent #333333 transparent;
			}
		}



		&.rtl {
			&.single .selectize-input:after {
			  left: 17px;
			  right: auto;
			}
			.selectize-input > input {
			  margin: 0 4px 0 -2px !important;
			}
		}


		.selectize-input {
		  padding: $input-padding-y $input-padding-x;
		  font-size: $font-size-base;
		  line-height: $input-line-height;

			&.disabled {
			  opacity: 0.5;
			  background-color: #ffffff;
			}
		}
	}

	.selectize-input {
		// display: inline-block;
		display: block;
		width: 100%;

	  padding: $input-padding-y $input-padding-x;
	  font-size: $font-size-base;
	  line-height: $input-line-height;
	  color: $input-color;
	  background-color: $input-bg;
	  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
	  background-image: none;
	  background-clip: padding-box;
	  border: $input-btn-border-width solid $input-border-color;

	  /*border: 1px solid #cccccc;*/
		// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	  @if $enable-rounded {
	    // Manually use the if/else instead of the mixin to account for iOS override
	    border-radius: $input-border-radius;
		  // -webkit-border-radius: 4px;
		  // -moz-border-radius: 4px;
		  // border-radius: 4px;
	  } @else {
	    // Otherwise undo the iOS default
	    border-radius: 0;
	  }

		// -webkit-box-shadow: none;
		// box-shadow: none;
	  @include box-shadow($input-box-shadow);
	  @include transition($input-transition);

	  overflow: hidden;
	  position: relative;
	  z-index: 1;

	  -webkit-box-sizing: border-box;
	  -moz-box-sizing: border-box;
	  box-sizing: border-box;

	  // min-height: 34px;



		&.full {
		  background-color: #ffffff;
		}

		&.disabled,
		&.disabled * {
		  cursor: default !important;
		}


		&.focus {
	    color: $input-color-focus;
	    background-color: $input-bg-focus;
	    border-color: $input-border-focus;
	    outline: none;
	    @include box-shadow($input-box-shadow-focus);
		}

		// Unstyle the caret on `<select>`s in IE10+.
	  &::-ms-expand {
	    background-color: transparent;
	    border: 0;
	  }

	  // Customize the `:focus` state to imitate native WebKit styles.
	  @include form-control-focus();

	  // Placeholder
	  &::placeholder {
	    color: $input-color-placeholder;
	    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
	    opacity: 1;
	  }
		&:disabled,
	  &[readonly] {
	    background-color: $input-bg-disabled;
	    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
	    opacity: 1;
	  }

	  &:disabled {
	    cursor: $cursor-disabled;
	  }


		&.dropdown-active {
		  // -webkit-border-radius: 4px 4px 0 0;
		  // -moz-border-radius: 4px 4px 0 0;
		  // border-radius: 4px 4px 0 0;
			//
		  // -webkit-border-radius: 4px;
		  // -moz-border-radius: 4px;
		  // border-radius: 4px;

			// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
		  @if $enable-rounded {
		    // Manually use the if/else instead of the mixin to account for iOS override
		    border-radius: $input-border-radius;
		  } @else {
		    // Otherwise undo the iOS default
		    border-radius: 0;
		  }

			&::before {
			  content: ' ';
			  display: block;
			  position: absolute;
			  background: #ffffff;
			  height: 1px;
			  bottom: 0;
			  left: 0;
			  right: 0;

			  display: none;
			}
		}

		& > * {
		  vertical-align: baseline;
		  display: -moz-inline-stack;
		  display: inline-block;
		  zoom: 1;
		  *display: inline;
		}

		& > input {
		  display: inline-block !important;
		  padding: 0 !important;
		  min-height: 0 !important;
		  max-height: none !important;
		  max-width: 100% !important;
		  margin: 0 !important;
		  text-indent: 0 !important;
		  border: 0 none !important;
		  background: none !important;
		  line-height: inherit !important;
		  -webkit-user-select: auto !important;
		  -webkit-box-shadow: none !important;
		  box-shadow: none !important;

			&::-ms-clear {
			  display: none;
			}
			&:focus {
			  outline: none !important;
			}
		}

		&::after {
		  content: ' ';
		  display: block;
		  clear: left;
		}



	}

	.selectize-dropdown {
	  position: absolute;
	  z-index: 10;

	  background: #ffffff;
	  // margin: -1px 0 0 0;
	  margin: 0;
	  border-top: 0 none;

	  font-size: $font-size-base;
	  line-height: $input-line-height;
	  color: $input-color;
	  background-color: $input-bg;
	  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
	  background-image: none;
	  background-clip: padding-box;
	  border: $input-btn-border-width solid $input-border-color;

		// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	  @if $enable-rounded {
	    // Manually use the if/else instead of the mixin to account for iOS override
	    border-radius: $input-border-radius;
	  } @else {
	    // Otherwise undo the iOS default
	    border-radius: 0;
	  }

	  @include box-shadow($input-box-shadow);

		[data-selectable] {
		  cursor: pointer;
		  overflow: hidden;
		  padding: $input-padding-y $input-padding-x;

			.highlight {
			  background: rgba(255, 237, 40, 0.4);// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
			  @if $enable-rounded {
			    // Manually use the if/else instead of the mixin to account for iOS override
			    border-radius: calc(1px);
			  } @else {
			    // Otherwise undo the iOS default
			    border-radius: 0;
			  }
			}
		}

		[data-selectable],
		.optgroup-header {
		  // padding: 3px 12px;
			padding: calc($input-padding-y) $input-padding-x;
		}

		.optgroup:first-child .optgroup-header {
		  border-top: 0 none;
		}

		.optgroup-header {
		  color: #777777;
		  background: #ffffff;
		  cursor: default;

		  font-size: 0.75rem;
		  line-height: 1.42857143;
		}

		.active {
		  background-color: #f5f5f5;
		  color: #262626;

			&.create {
			  color: #262626;
			}
		}
		.create {
		  color: rgba(51, 51, 51, 0.5);
		}

		&,
		&.form-control {
		  height: auto;
		  padding: 0;
		  // margin: 2px 0 0 0;
		  margin: 0px 0 0 0;
		  z-index: 1000;
			font-size: $font-size-base;
		  line-height: $input-line-height;
		  color: $input-color;
		  background-color: $input-bg;
		  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
		  background-image: none;
		  background-clip: padding-box;
		  border: $input-btn-border-width solid $input-border-color;

		  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
		  @if $enable-rounded {
		    // Manually use the if/else instead of the mixin to account for iOS override
		    border-radius: $input-border-radius;
		  } @else {
		    // Otherwise undo the iOS default
		    border-radius: 0;
		  }

		  @include box-shadow($input-box-shadow);
		  @include transition($input-transition);
		}
		.optgroup:first-child:before {
		  display: none;
		}
		.optgroup:before {
		  content: ' ';
		  display: block;
		  height: 1px;
		  margin: 9px 0;
		  overflow: hidden;
		  background-color: #e5e5e5;
		  margin-left: -12px;
		  margin-right: -12px;
		}
	}

	.selectize-dropdown-header {
	  position: relative;
	  // padding: 3px 12px;
	  border-bottom: $input-btn-border-width solid $input-border-color;
	  // background: #f8f8f8;// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	  color: $input-color;
	  background-color: $input-bg;

	  @if $enable-rounded {
	    // Manually use the if/else instead of the mixin to account for iOS override
	    border-radius: $input-border-radius;
	  } @else {
	    // Otherwise undo the iOS default
	    border-radius: 0;
	  }

		padding: $input-padding-y $input-padding-x;
	}

	.selectize-dropdown-header-close {
	  position: absolute;
	  right: 12px;
	  top: 50%;
	  color: #333333;
	  opacity: 0.4;
	  margin-top: -12px;
	  line-height: 23px;
	  font-size: 20px !important;

		&:hover {
		  color: #000000;
		}
	}

	.selectize-dropdown-content {
		overflow-y: auto;
		overflow-x: hidden;
		max-height: 200px;
		-webkit-overflow-scrolling: touch;

		padding: 5px 0;
	}


	.selectize-dropdown,
	.selectize-input,
	.selectize-input input {
	  color: #333333;
	  font-family: inherit;
	  font-size: inherit;
	  line-height: 23px;
	  -webkit-font-smoothing: inherit;
	}
	.selectize-input,
	.selectize-control.single .selectize-input.input-active {
	  background: #ffffff;
	  cursor: text;
	  display: inline-block;
	}


	.has-error {
	  @include form-control-validation($brand-danger);

	  // .form-control-danger {
	  //   background-image: $form-icon-danger;
	  // }

		.selectize-input {
	    // background-image: $form-icon-danger;
		  border-color: $brand-danger;
		  // -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
		  // box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
		  @include box-shadow($input-box-shadow);
		  @include transition($input-transition);

			&:focus {
			  border-color: #843534;
			  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
			  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
			}
		}
	}



	.form-control {
		.selectize-control {
		  padding: 0;
		  height: auto;
		  border: none;
		  background: none;
		  -webkit-box-shadow: none;
		  box-shadow: none;
		  -webkit-border-radius: 0;
		  -moz-border-radius: 0;
		  border-radius: 0;
		}
	}



	&.selectize-sm {
		.selectize-control {
			line-height: 0;

			.selectize-input {
			  padding: $input-padding-y-sm $input-padding-x-sm;
			  font-size: $font-size-sm;
			  @include border-radius($input-border-radius-sm);
			}

			&.multi {
				.selectize-input {

					&.has-items {
						padding: $input-padding-y-sm $input-padding-x-sm;
						padding-bottom: calc(#{$input-padding-y-sm} * 0.3);
					}
				}
			}
		}

		.selectize-dropdown {
			font-size: $font-size-sm;


			[data-selectable] {
			  padding: $input-padding-y-sm $input-padding-x-sm;
			}
		}
	}
}
